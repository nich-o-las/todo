{"version":3,"sources":["components/NewTodoForm/index.js","components/Todo/index.js","components/TodoList/index.js","App.js","serviceWorker.js","index.js"],"names":["NewTodoForm","props","useState","title","body","newTodo","setNewTodo","formClasses","showing","push","handleChange","evt","target","name","value","className","join","onSubmit","preventDefault","submitTodo","placeholder","onChange","id","Todo","handleClick","classList","contains","console","log","removeTodo","unique","onClick","length","substring","TodoList","todos","setTodos","active","setActive","editing","setEditing","useEffect","stored","JSON","parse","localStorage","getItem","updated","stringify","setItem","deleteTodo","Object","keys","changeActive","handleSubmit","changeTodo","newBtn","map","key","newId","uuidv4","completed","type","displayActive","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.19796bf9.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './style.css';\r\n\r\nexport default function NewTodoForm(props){\r\n  const [newTodo, setNewTodo] = useState({title: '', body: ''});\r\n\r\n  let formClasses = [];\r\n  if(!props.showing){\r\n    formClasses.push('hide');\r\n  }\r\n  const handleChange = (evt) => {\r\n    if(evt.target.name === \"title\"){\r\n      setNewTodo({...newTodo, title: evt.target.value});\r\n    } else {\r\n      setNewTodo({...newTodo, body: evt.target.value});\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    props.submitTodo(newTodo.title, newTodo.body);\r\n    setNewTodo({title:'', body:''});\r\n  }\r\n\r\n  return(\r\n    <div className={[\"NewTodoForm\", ...formClasses].join(' ')} >\r\n      <form\r\n        onSubmit={handleSubmit}\r\n      > \r\n        <div className=\"NewTodoForm-row\">\r\n          <input\r\n            className=\"inputField titleInput\"\r\n            placeholder=\"Title\"\r\n            name=\"title\"\r\n            value={newTodo.title}\r\n            onChange={handleChange}\r\n            id=\"NewTodoInput\"\r\n          />\r\n          <button className=\"NewTodoForm-save\"><i className=\"fa fa-save\"></i></button>\r\n        </div>\r\n        <textarea\r\n          className=\"inputField bodyInput\"\r\n          placeholder=\"body\"\r\n          name=\"body\"\r\n          value={newTodo.body}\r\n          onChange={handleChange}\r\n          id=\"NewTodoInput\"\r\n        />\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default function Todo(props){\r\n  const handleClick = (evt) => {\r\n    if(evt.target.classList.contains('Todo-delete')) {\r\n      console.log('clicked button')\r\n      props.removeTodo(props.unique);\r\n    } else{\r\n      props.onClick(props.unique);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"Todo\" onClick={handleClick}>\r\n      <p className=\"Todo-title\">\r\n          {(props.title.length > 8 ? \r\n            props.title.substring(0,8) + '...' : \r\n            props.title)}\r\n      </p>\r\n      <i \r\n        className=\"fa fa-trash-alt Todo-delete alert-text\"\r\n        id={`delete-${props.unique}`}\r\n        onClick={handleClick} \r\n      ></i>\r\n    </div>\r\n  )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './style.css';\r\nimport NewTodoForm from '../NewTodoForm';\r\nimport Todo from '../Todo';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n\r\nexport default function TodoList(){\r\n  const [todos, setTodos] = useState({});\r\n  const [active, setActive] = useState({});\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const stored = JSON.parse(localStorage.getItem('reactTodos'));\r\n    if(stored){\r\n      setTodos({...stored});\r\n      //setActive(stored[Object.keys(stored)[0]]);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    if(todos){\r\n      const updated = JSON.stringify(todos);\r\n      localStorage.setItem('reactTodos', updated);\r\n    }\r\n    // if(!todos.length){\r\n    //   setEditing(false);\r\n    // }\r\n  }, [todos]);\r\n\r\n  const createTodo = (title, body) => {\r\n    const newId = uuidv4();\r\n    setTodos({...todos, [newId]: {body, title, id: newId, completed: false}});\r\n    setEditing(false);\r\n  }\r\n\r\n  const deleteTodo = (id) => {\r\n    const updated = {...todos};\r\n    delete updated[id];\r\n    if(id === active.id){\r\n      if(Object.keys(updated).length){\r\n        setActive(updated[Object.keys(updated)[0]]);\r\n      } else {\r\n        setEditing(false);\r\n      }\r\n    }\r\n    setTodos(updated);\r\n  }\r\n\r\n  const changeTodo = (title, body, id) => {\r\n    const updated = {...todos};\r\n    updated[id] = {...active, title, body}\r\n    setTodos(updated);\r\n  }\r\n\r\n  \r\n  const displayList = () => {\r\n    if(todos){\r\n      return (\r\n        Object.keys(todos).map((key) => {\r\n          return (\r\n                    <Todo \r\n                      key={todos[key].id} \r\n                      unique={todos[key].id}\r\n                      removeTodo={deleteTodo}\r\n                      title={todos[key].title}\r\n                      onClick={changeActive}\r\n                    />)\r\n        })\r\n      )\r\n    } else {\r\n      return(\r\n        <div className=\"TodoList-noNotes alert-text\">\r\n          No Notes!\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const displayActive = () => {\r\n    if(active && editing){\r\n      return(\r\n        <div className=\"TodoList-activeNote\">\r\n          <form\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <div className=\"TodoList-activeNote-row\">\r\n              <input \r\n                className=\"titleInput inputField\"\r\n                type=\"text\" \r\n                value={active.title} \r\n                name=\"title\"\r\n                onChange={handleChange}\r\n              />\r\n              <div\r\n                className=\"deleteActive deleteActive-container\" \r\n                onClick={handleClick}\r\n              >\r\n                <i className=\"fa fa-trash-alt deleteActive alert-text\"></i>\r\n              </div>\r\n            </div>\r\n            <textarea \r\n              className=\"bodyInput inputField\"\r\n              value={active.body} \r\n              name=\"body\"\r\n              onChange={handleChange}\r\n            />\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const changeActive = (id) => {\r\n    setActive(todos[id]);\r\n    setEditing(true);\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    changeTodo(active.title, active.body, active.id);\r\n  }\r\n\r\n  const handleClick = (evt) => {\r\n    if(evt.target.classList.contains('deleteActive')){\r\n      console.log('delete')\r\n      deleteTodo(active.id);\r\n    }\r\n  }\r\n\r\n  const handleChange = (evt) => {\r\n    if(evt.target.name === \"body\"){\r\n      setActive({...active, body: evt.target.value});\r\n      setTodos({...todos, [active.id] : {...active, body: evt.target.value}})\r\n    } else {\r\n      setActive({...active, title: evt.target.value});\r\n      setTodos({...todos, [active.id] : {...active, title: evt.target.value}})\r\n    }\r\n  }\r\n\r\n  const newBtn = () => {\r\n    if(editing){\r\n      return(\r\n        <div\r\n          className=\"TodoList-newBtn\"\r\n          onClick={()=>setEditing(false)}\r\n        >\r\n          <i className=\"fa fa-pen\"></i>\r\n          <p>new note</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  return(\r\n    <div className=\"TodoList\">\r\n      <div className=\"TodoList-header\">\r\n        <h1 className=\"TodoList-logo\">Note Taker</h1>\r\n        {newBtn()}\r\n      </div>\r\n      <div className=\"TodoList-container primary\">\r\n        <div className=\"TodoList-list\">\r\n          {displayList()}\r\n        </div>\r\n        <div className=\"TodoList-edit\">\r\n          <NewTodoForm \r\n            showing={!editing}\r\n            submitTodo={createTodo}\r\n          />\r\n          {displayActive()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App secondary\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}